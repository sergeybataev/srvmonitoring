version: '3.7'

volumes:
    grafana_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/grafana 
        o: bind
    prometheus_config_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/prometheus/config
        o: bind
    prometheus_data:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/prometheus/data
        o: bind
    alertmanager_config_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/alertmanager
        o: bind
    scylla_data_master:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/scylla/master
        o: bind
    # scylla_data_1:
    #   driver_opts:
    #     type: none
    #     device: /mnt/disk1/temporary/monitoring/scylla/1
    #     o: bind
    # scylla_data_2:
    #   driver_opts:
    #     type: none
    #     device: /mnt/disk1/temporary/monitoring/scylla/2
    #     o: bind

networks:
  front-tier:
#    external: true
  back-tier:
    internal: true

services:

  # Create Schema for Scylla
  scylladb-schema:
    container_name: monitoring-scylla-schema
    image: jaegertracing/jaeger-cassandra-schema:latest
    depends_on:
      - scylladb
    environment: 
      CQLSH_HOST: scylladb
      DATACENTER: monitoring
      MODE: test
    networks:
      - back-tier
    labels:
      container_group: monitoring

  scylladb:
    image: scylladb/scylla:latest
    container_name: monitoring-scylla
    volumes:
      - scylla_data_master:/var/lib/scylla
#    command: --authenticator=PasswordAuthenticator
    ports: 
      - "9042"
    networks:
      - back-tier
    labels:
      container_group: monitoring

#  Only if we want replicas
#  scylladb2:
#    image: scylladb/scylla
#    container_name: monitoring-scylla_1
#    command: --seeds=scylladb
#    volumes:
#      - scylla_data_1:/var/lib/scylla
#    ports: 
#      - "9042"
#    networks:
#      - back-tier
#
#  scylladb3:
#    image: scylladb/scylla
#    container_name: monitoring-scylla_2
#    command: --seeds=scylladb
#    volumes:
#      - scylla_data_2:/var/lib/scylla
#    ports: 
#      - "9043"
#    networks:
#      - back-tier

  # Collector
  otel-collector:
    container_name: monitoring-otel-collector
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the collector
      - "8889"   # Prometheus exporter metrics
      - "13133" # health_check extension
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
    depends_on:
      - jaeger
    networks:
      - back-tier
    labels:
      container_group: monitoring


  # Agent
  otel-agent:
    container_name: monitoring-otel-agent
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "1777"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the agent
#      - "14268"       # Jaeger receiver
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector
    networks:
      - back-tier
#      - front-tier
    labels:
      container_group: monitoring

  # Jaeger Tracing
  jaeger-collector:
    container_name: monitoring-jaeger-collector
    image: jaegertracing/jaeger-opentelemetry-collector:latest
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_monitoring
    restart: always
    command: 
      - --config=/config/config.yaml
      - --log-level=debug
    volumes:
      - ./jaeger-otel-collector.yaml:/config/config.yaml
    ports:
      - "1777"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the agent
      - "14268"       # Jaeger receiver
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - scylladb
#      - scylladb2
#      - scylladb3
    networks:
      - back-tier
    labels:
      container_group: monitoring

  prometheus:
    container_name: monitoring-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_config_data:/etc/prometheus/
      - prometheus_data:/prometheus
    ports:
     - "9090"
    networks:
      - back-tier
      - front-tier
    labels:
      container_group: monitoring

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: monitoring-nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100
    networks:
      - back-tier
    labels:
      container_group: monitoring

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: monitoring-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    command: ["-store_container_labels=true", "-docker_only"]
    restart: unless-stopped
    ports:
      - 8888:8080
    networks:
      - back-tier
      - front-tier
    labels:
      container_group: monitoring
  
  postgres-exporter:
    container_name: monitoring-postgres
    image: wrouesnel/postgres_exporter
    environment: 
      DATA_SOURCE_NAME: "postgresql://postgres:12345@192.168.111.222:5432/postgres?sslmode=disable" 
    command:
      - '--web.listen-address=:9187'
      - '--web.telemetry-path=/metrics'
    ports: 
      - "9187"
    networks:
      - back-tier
      - front-tier
    labels:
      container_group: monitoring
    restart: unless-stopped


  alertmanager:
    image: prom/alertmanager:latest
    container_name: monitoring-alertmanager
    volumes:
      - alertmanager_config_data:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093
    networks:
      - back-tier
    labels:
      container_group: monitoring

# Front Services

  grafana:
    container_name: monitoring-grafana
    image: grafana/grafana:latest
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
#      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment: 
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - back-tier
      - front-tier
    restart: always
    labels:
      container_group: monitoring

  jaeger:
    container_name: monitoring-jaeger
    image: jaegertracing/jaeger-query:latest
    restart: unless-stopped
    ports:
      - 16686:16686
      - 16687:16687
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_monitoring
    depends_on:
      - scylladb
    networks:
      - back-tier
      - front-tier
    labels:
      container_group: monitoring
