version: "3"

volumes:
    grafana_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/grafana 
        o: bind
    prometheus_config_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/prometheus/config
        o: bind
    prometheus_data:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/prometheus/data
        o: bind
    alertmanager_config_data: 
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/alertmanager
        o: bind
    scylla_data_master:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/scylla/master
        o: bind
    scylla_data_1:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/scylla/1
        o: bind
    scylla_data_2:
      driver_opts:
        type: none
        device: /mnt/disk1/temporary/monitoring/scylla/2
        o: bind

networks:
  front-tier:
#    external: true
  back-tier:
    internal: true

services: 

  # Create Schema for Scylla
  scylladb-schema:
    container_name: monitoring-scylla-schema
    image: jaegertracing/jaeger-cassandra-schema:1.11
    depends_on:
      - scylladb
    environment: 
      CQLSH_HOST: scylladb
      DATACENTER: test
      MODE: test
    networks:
      - back-tier

  scylladb:
    image: scylladb/scylla
    container_name: monitoring-scylla
    volumes:
      - scylla_data_master:/var/lib/scylla
#    command: --authenticator=PasswordAuthenticator
    ports: 
      - "9042"
    networks:
      - back-tier

#  scylladb2:
#    image: scylladb/scylla
#    container_name: monitoring-scylla_1
#    command: --seeds=scylladb
#    volumes:
#      - scylla_data_1:/var/lib/scylla
#    ports: 
#      - "9042"
#    networks:
#      - back-tier
#
#  scylladb3:
#    image: scylladb/scylla
#    container_name: monitoring-scylla_2
#    command: --seeds=scylladb
#    volumes:
#      - scylla_data_2:/var/lib/scylla
#    ports: 
#      - "9043"
#    networks:
#      - back-tier

  # collector:
  #   container_name: monitoring-collector
  #   image: jaegertracing/jaeger-collector:1.11
  #   environment: 
  #     SPAN_STORAGE_TYPE: cassandra
  #     CASSANDRA_SERVERS: scylladb,scylladb2,scylladb3
  #     CASSANDRA_KEYSPACE: jaeger_v1_test
  #   ports:
  #     - "14267" # TChannel  used by jaeger-agent to send spans in jaeger.thrift format
  #     - "14250" # gRPC  used by jaeger-agent to send spans in model.proto format
  #     - "14268" # HTTP  can accept spans directly from clients in jaeger.thrift format over binary thrift protocol
  #     - "9411"  # HTTP  can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)
  #     - "14269" # HTTP  Healthcheck at / and metrics at /metrics
  #   depends_on:
  #     - scylladb
  #   networks:
  #     - back-tier

  # agent: 
  #   container_name: monitoring-agent
  #   image: jaegertracing/jaeger-agent:1.11
  #   restart: unless-stopped
  #   command: 
  #     # - --collector.host-port=collector:14267
  #     - --reporter.grpc.host-port=monitoring-collector:14250
  #     - --log-level=debug
  #   ports:
  #     - 5775/udp
  #     - 6831/udp
  #     - 6832/udp
  #     - 5778/tcp
  #   depends_on:
  #     - scylladb
  #   networks:
  #     - back-tier

  web:
    container_name: monitoring-web
    image: jaegertracing/jaeger-query:1.11
    restart: always
    ports:
      - 16686:16686
      - 16687:16687
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_test
    depends_on:
      - scylladb
    networks:
      - back-tier
      - front-tier

  hotrod:
    image: jaegertracing/example-hotrod:latest
    ports: 
      - "9980:8080"
    command: ["all"]
    restart: always
    environment:
      - JAEGER_AGENT_HOST=jaeger-collector-listen
      - JAEGER_AGENT_PORT=14268
    networks:
      - jaeger-example
    depends_on:
      - jaeger-collector-listen
    networks:
      - back-tier
      - front-tier

  # Synthetic load generators
  jaeger-emitter:
    container_name: monitoring-synt_load_generator
    image: omnition/synthetic-load-generator:1.0.25
    environment:
      - JAEGER_COLLECTOR_URL=http://jaeger-collector-listen:14268
    depends_on:
      - jaeger-collector
    networks:
      - back-tier

  jaeger-collector:
    container_name: monitoring-jaeger-collector
    image: jaegertracing/jaeger-opentelemetry-collector:latest
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_test
    restart: always
    command: 
      - --config=/config/config.yaml
      - --log-level=debug
    volumes:
      - ./jaeger-otel-collector.yaml:/config/config.yaml
    ports:
      - "1888"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the collector
      - "8889"   # Prometheus exporter metrics
      - "13133" # health_check extension
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
    depends_on:
      - scylladb
#      - scylladb2
#      - scylladb3
    networks:
      - back-tier
      - front-tier

  jaeger-collector-listen:
    container_name: monitoring-jaeger-collector-listen
    image: jaegertracing/jaeger-opentelemetry-collector:latest
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_test
    restart: always
    command: 
      - --config=/config/config.yaml
      - --log-level=debug
    volumes:
      - ./jaeger-otel-collector.yaml:/config/config.yaml
    ports:
      - "1777"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the agent
      - "14444:14268"       # Jaeger receiver
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - scylladb
#      - scylladb2
#      - scylladb3
    networks:
      - back-tier
      - front-tier


  jaeger-agent:
    container_name: monitoring-jaeger-agent
    image: jaegertracing/jaeger-opentelemetry-agent:latest
    environment: 
      SPAN_STORAGE_TYPE: cassandra
      CASSANDRA_SERVERS: scylladb
      CASSANDRA_KEYSPACE: jaeger_v1_test
    restart: always
    command: 
      - --config=/config/config.yaml
      - --log-level=debug
    volumes:
      - ./jaeger-otel-collector.yaml:/config/config.yaml
    ports:
      - "1777"   # pprof extension
      - "8888"   # Prometheus metrics exposed by the agent
      - "14445:14268"       # Jaeger receiver
      - "55678"       # OpenCensus receiver
      - "55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - scylladb
#      - scylladb2
#      - scylladb3
    networks:
      - back-tier
      - front-tier